# --- Post-tip: retract until extruder sensor clears, then cut on EREC ---
[gcode_macro _MMU_POST_TIP_CUT]
description: After _MMU_FORM_TIP, back out until sensor clears, back X to cutter, open, feed Y to cut
# Defaults tuned for your setup
variable_sensor_name: "extruder"        # from extruder_homing_endstop: extruder
variable_step: 1.0                      # mm per check-step while sensor is still active
variable_max_check: 60.0                # safety cap for the search
variable_extra_back: 25.0               # X: extra pullback from sensor to cutter (mm)
variable_forward_cut: 3.0               # Y: forward feed across blade to slice (mm)
variable_speed: 150.0                   # mm/s
variable_close_after: True              # close the cutter after slicing
variable_cleared: False

gcode:
    {% set sensor = params.SENSOR|default(variable_sensor_name)|string %}
    {% set step = params.STEP|default(variable_step)|float %}
    {% set max_check = params.MAX|default(variable_max_check)|float %}
    {% set extra_back = params.EXTRA_BACK|default(variable_extra_back)|float %}
    {% set forward_cut = params.FWD|default(variable_forward_cut)|float %}
    {% set speed = params.SPEED|default(variable_speed)|float %}
    {% set close_after = (params.CLOSE_AFTER|default(variable_close_after)|string|lower) in ["1","true","on","yes"] %}
    {% set tries = (max_check / step)|round(0, 'floor')|int %}
    {% set sensor_key = "filament_switch_sensor " ~ sensor %}

    # sanity check
    {% if sensor_key not in printer %}
        RESPOND TYPE=error MSG="[MMU] Filament sensor '{{sensor}}' not found. Check [filament_switch_sensor {{sensor}}]."
        {% exit 1 %}
    {% endif %}

    # ensure filament is actually present before starting
    {% if not printer[sensor_key].filament_detected %}
        RESPOND TYPE=error MSG="[MMU] No filament detected in sensor '{{sensor}}'. Cannot perform post-tip cut."
        {% exit 1 %}
    {% endif %}

    # reset flag
    SET_GCODE_VARIABLE MACRO=_MMU_POST_TIP_CUT VARIABLE=cleared VALUE=False

    RESPOND PREFIX="[MMU]" MSG="Post-tip: retract until '{{sensor}}' clears (step={{step}}mm, max={{max_check}}mm)..."

    # Stage A — back out until extruder sensor deactivates
    {% for i in range(tries) %}
        {% if not printer[sensor_key].filament_detected and not printer.gcode_macro._MMU_POST_TIP_CUT.cleared %}
            SET_GCODE_VARIABLE MACRO=_MMU_POST_TIP_CUT VARIABLE=cleared VALUE=True
            RESPOND PREFIX="[MMU]" MSG="Sensor cleared after ~{{ (i*step)|round(2) }}mm."
        {% endif %}

        {% if printer.gcode_macro._MMU_POST_TIP_CUT.cleared %}
            {% break %}
        {% else %}
            MMU_TEST_MOVE MOVE={-step} SPEED={speed}
            G4 P60
        {% endif %}
    {% endfor %}

    {% if not printer.gcode_macro._MMU_POST_TIP_CUT.cleared %}
        RESPOND TYPE=error MSG="[MMU] Sensor never cleared within {{max_check}}mm. Aborting cut."
        {% exit 1 %}
    {% endif %}

    # Stage B — extra back to cutter
    RESPOND PREFIX="[MMU]" MSG="Backing extra {{extra_back}}mm to cutter..."
    MMU_TEST_MOVE MOVE={-extra_back} SPEED={speed}
    G4 P150

    # Stage C — open cutter, feed forward across blade to slice
    RESPOND PREFIX="[MMU]" MSG="Opening cutter..."
    _MMU_CUTTER_OPEN
    G4 P120

    RESPOND PREFIX="[MMU]" MSG="Feeding {{forward_cut}}mm to cut..."
    MMU_TEST_MOVE MOVE={forward_cut} SPEED={speed}
    G4 P150

    {% if close_after %}
        RESPOND PREFIX="[MMU]" MSG="Closing cutter..."
        _MMU_CUTTER_CLOSE
        G4 P120
    {% endif %}

    RESPOND PREFIX="[MMU]" MSG="Post-tip cut done."